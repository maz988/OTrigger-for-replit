import { jsPDF } from "jspdf";
import { QuizFormData, EmailFormData } from "@shared/schema";

interface GeneratePDFParams {
  quizData: QuizFormData;
  userData: EmailFormData;
  advice: string;
  affiliateLink: string;
}

export const generatePDF = ({
  quizData,
  userData,
  advice,
  affiliateLink
}: GeneratePDFParams): jsPDF => {
  // Create a new PDF document
  const doc = new jsPDF({
    orientation: "portrait",
    unit: "mm",
    format: "a4",
  });

  // Set up document properties
  const pageWidth = doc.internal.pageSize.getWidth();
  const margin = 20;
  const contentWidth = pageWidth - (margin * 2);
  
  // Add title with pink color
  doc.setTextColor(242, 59, 108); // #F23B6C
  doc.setFontSize(24);
  doc.setFont("helvetica", "bold");
  doc.text("Your Custom Obsession Trigger Plan", margin, margin);
  
  // Add subtitle
  doc.setTextColor(107, 114, 128); // gray-500
  doc.setFontSize(12);
  doc.setFont("helvetica", "normal");
  doc.text(`Prepared specially for ${userData.firstName}`, margin, margin + 8);
  
  // Add divider
  doc.setDrawColor(229, 231, 235); // gray-200
  doc.line(margin, margin + 12, pageWidth - margin, margin + 12);
  
  // Add content
  doc.setTextColor(31, 41, 55); // gray-800
  doc.setFontSize(11);
  
  // Process markdown-like advice text
  const sections = advice.split('\n\n');
  let yPosition = margin + 20;
  
  for (const section of sections) {
    // Check if it's a header (starts with # or ##)
    if (section.startsWith('# ') || section.startsWith('## ') || section.startsWith('### ')) {
      const headerText = section.replace(/^#+\s/, '');
      doc.setFontSize(section.startsWith('# ') ? 18 : section.startsWith('## ') ? 16 : 14);
      doc.setFont("helvetica", "bold");
      doc.setTextColor(242, 75, 124); // #f24b7c
      const lines = doc.splitTextToSize(headerText, contentWidth);
      doc.text(lines, margin, yPosition);
      yPosition += lines.length * 8;
      
      // Reset for normal text
      doc.setTextColor(31, 41, 55);
      doc.setFontSize(11);
      doc.setFont("helvetica", "normal");
    } 
    // Check if it's a list item (starts with number and period or * or - )
    else if (/^\d+\.\s/.test(section) || section.trim().startsWith('* ') || section.trim().startsWith('- ')) {
      const listText = section;
      doc.setFont("helvetica", "normal");
      const lines = doc.splitTextToSize(listText, contentWidth - 5);
      doc.text(lines, margin + 5, yPosition); // Indent list items
      yPosition += lines.length * 6 + 2;
    }
    // Regular paragraph
    else {
      // Check for bold text with **
      let paragraph = section;
      
      const lines = doc.splitTextToSize(paragraph, contentWidth);
      doc.text(lines, margin, yPosition);
      yPosition += lines.length * 6 + 4; // Add spacing between paragraphs
    }
  }
  
  // Add call to action box
  const ctaY = yPosition + 5;
  doc.setFillColor(249, 250, 251); // gray-50
  doc.setDrawColor(229, 231, 235); // gray-200
  doc.roundedRect(margin, ctaY, contentWidth, 20, 2, 2, 'FD');
  
  // Add CTA text
  doc.setTextColor(31, 41, 55); // gray-800
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.text("To learn the full system that activates his Hero Instinct, download His Secret Obsession.", margin + 5, ctaY + 8);
  
  doc.setTextColor(37, 99, 235); // blue-600
  doc.text(`Click here ğŸ‘‰ ${affiliateLink}`, margin + 5, ctaY + 15);
  
  // Add footer
  doc.setTextColor(107, 114, 128); // gray-500
  doc.setFontSize(9);
  doc.setFont("helvetica", "normal");
  const currentDate = new Date().toLocaleDateString('en-US', { 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  });
  const footerText = `Your custom plan generated by Obsession Trigger AI on ${currentDate}`;
  doc.text(footerText, pageWidth / 2, 280, { align: "center" });
  
  return doc;
};

export const downloadPDF = (doc: jsPDF, userName: string): void => {
  doc.save(`Obsession_Trigger_Plan_${userName}.pdf`);
};

export const getPDFDataUrl = (doc: jsPDF): string => {
  return doc.output('datauristring');
};
